"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Decimal128=void 0;const e=require("buffer"),r=require("./long"),o=/^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/,t=/^(\+|-)?(Infinity|inf)$/i,n=/^(\+|-)?NaN$/i,i=6111,f=-6176,h=6176,s=34,g=[124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),l=[248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),u=[120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),m=/^([-+])?(\d+)?$/,a=31,p=16383,w=30,c=31;function d(e){return!isNaN(parseInt(e,10))}function L(e){const o=r.Long.fromNumber(1e9);let t=r.Long.fromNumber(0);if(!(e.parts[0]||e.parts[1]||e.parts[2]||e.parts[3]))return{quotient:e,rem:t};for(let n=0;n<=3;n++)t=(t=t.shiftLeft(32)).add(new r.Long(e.parts[n],0)),e.parts[n]=t.div(o).low,t=t.modulo(o);return{quotient:e,rem:t}}function b(e,r){throw new TypeError(`"${e}" is not a valid Decimal128 string - ${r}`)}class N{constructor(e){this.bytes=e}static fromString(a){let p=!1,w=!1,c=!1,L=0,y=0,$=0,v=0,E=0;const S=[0];let D=0,x=0,B=0,j=0,I=0,R=0,q=new r.Long(0,0),O=new r.Long(0,0),U=0,T=0;if(a.length>=7e3)throw new TypeError(a+" not a valid Decimal128 string");const k=a.match(o),J=a.match(t),M=a.match(n);if(!k&&!J&&!M||0===a.length)throw new TypeError(a+" not a valid Decimal128 string");if(k){const e=k[2],r=k[4],o=k[5],t=k[6];r&&void 0===t&&b(a,"missing exponent power"),r&&void 0===e&&b(a,"missing exponent base"),void 0===r&&(o||t)&&b(a,"missing e before exponent")}if("+"!==a[T]&&"-"!==a[T]||(p="-"===a[T++]),!d(a[T])&&"."!==a[T]){if("i"===a[T]||"I"===a[T])return new N(e.Buffer.from(p?l:u));if("N"===a[T])return new N(e.Buffer.from(g))}for(;d(a[T])||"."===a[T];)"."!==a[T]?(D<34&&("0"!==a[T]||c)&&(c||(E=y),c=!0,S[x++]=parseInt(a[T],10),D+=1),c&&($+=1),w&&(v+=1),y+=1,T+=1):(w&&b(a,"contains multiple periods"),w=!0,T+=1);if(w&&!y)throw new TypeError(a+" not a valid Decimal128 string");if("e"===a[T]||"E"===a[T]){const r=a.substr(++T).match(m);if(!r||!r[2])return new N(e.Buffer.from(g));I=parseInt(r[0],10),T+=r[0].length}if(a[T])return new N(e.Buffer.from(g));if(B=0,D){if(j=D-1,1!==(L=$))for(;"0"===a[E+L-1];)L-=1}else B=0,j=0,S[0]=0,$=1,D=1,L=0;for(I<=v&&v-I>16384?I=f:I-=v;I>i;){if((j+=1)-B>s){if(S.join("").match(/^0+$/)){I=i;break}b(a,"overflow")}I-=1}for(;I<f||D<$;){if(0===j&&L<D){I=f,L=0;break}if(D<$?$-=1:j-=1,I<i)I+=1;else{if(S.join("").match(/^0+$/)){I=i;break}b(a,"overflow")}}if(j-B+1<L){let r=y;w&&(E+=1,r+=1),p&&(E+=1,r+=1);const o=parseInt(a[E+j+1],10);let t=0;if(o>=5&&(t=1,5===o))for(t=S[j]%2==1?1:0,R=E+j+2;R<r;R++)if(parseInt(a[R],10)){t=1;break}if(t){let r=j;for(;r>=0;r--)if(++S[r]>9&&(S[r]=0,0===r)){if(!(I<i))return new N(e.Buffer.from(p?l:u));I+=1,S[r]=1}}}if(q=r.Long.fromNumber(0),O=r.Long.fromNumber(0),0===L)q=r.Long.fromNumber(0),O=r.Long.fromNumber(0);else if(j-B<17){let e=B;for(O=r.Long.fromNumber(S[e++]),q=new r.Long(0,0);e<=j;e++)O=(O=O.multiply(r.Long.fromNumber(10))).add(r.Long.fromNumber(S[e]))}else{let e=B;for(q=r.Long.fromNumber(S[e++]);e<=j-17;e++)q=(q=q.multiply(r.Long.fromNumber(10))).add(r.Long.fromNumber(S[e]));for(O=r.Long.fromNumber(S[e++]);e<=j;e++)O=(O=O.multiply(r.Long.fromNumber(10))).add(r.Long.fromNumber(S[e]))}const _=function(e,o){if(!e&&!o)return{high:r.Long.fromNumber(0),low:r.Long.fromNumber(0)};const t=e.shiftRightUnsigned(32),n=new r.Long(e.getLowBits(),0),i=o.shiftRightUnsigned(32),f=new r.Long(o.getLowBits(),0);let h=t.multiply(i),s=t.multiply(f);const g=n.multiply(i);let l=n.multiply(f);return h=h.add(s.shiftRightUnsigned(32)),s=new r.Long(s.getLowBits(),0).add(g).add(l.shiftRightUnsigned(32)),{high:h=h.add(s.shiftRightUnsigned(32)),low:l=s.shiftLeft(32).add(new r.Long(l.getLowBits(),0))}}(q,r.Long.fromString("100000000000000000"));_.low=_.low.add(O),function(e,r){const o=e.high>>>0,t=r.high>>>0;if(o<t)return!0;if(o===t&&e.low>>>0<r.low>>>0)return!0;return!1}(_.low,O)&&(_.high=_.high.add(r.Long.fromNumber(1))),U=I+h;const P={low:r.Long.fromNumber(0),high:r.Long.fromNumber(0)};_.high.shiftRightUnsigned(49).and(r.Long.fromNumber(1)).equals(r.Long.fromNumber(1))?(P.high=P.high.or(r.Long.fromNumber(3).shiftLeft(61)),P.high=P.high.or(r.Long.fromNumber(U).and(r.Long.fromNumber(16383).shiftLeft(47))),P.high=P.high.or(_.high.and(r.Long.fromNumber(0x7fffffffffff)))):(P.high=P.high.or(r.Long.fromNumber(16383&U).shiftLeft(49)),P.high=P.high.or(_.high.and(r.Long.fromNumber(562949953421311)))),P.low=_.low,p&&(P.high=P.high.or(r.Long.fromString("9223372036854775808")));const A=e.Buffer.alloc(16);return T=0,A[T++]=255&P.low.low,A[T++]=P.low.low>>8&255,A[T++]=P.low.low>>16&255,A[T++]=P.low.low>>24&255,A[T++]=255&P.low.high,A[T++]=P.low.high>>8&255,A[T++]=P.low.high>>16&255,A[T++]=P.low.high>>24&255,A[T++]=255&P.high.low,A[T++]=P.high.low>>8&255,A[T++]=P.high.low>>16&255,A[T++]=P.high.low>>24&255,A[T++]=255&P.high.high,A[T++]=P.high.high>>8&255,A[T++]=P.high.high>>16&255,A[T++]=P.high.high>>24&255,new N(A)}toString(){let e,o=0;const t=new Array(36);for(let e=0;e<t.length;e++)t[e]=0;let n,i,f,s=0,g=!1,l={parts:[0,0,0,0]};const u=[];s=0;const m=this.bytes,d=m[s++]|m[s++]<<8|m[s++]<<16|m[s++]<<24,b=m[s++]|m[s++]<<8|m[s++]<<16|m[s++]<<24,N=m[s++]|m[s++]<<8|m[s++]<<16|m[s++]<<24,y=m[s++]|m[s++]<<8|m[s++]<<16|m[s++]<<24;s=0,{low:new r.Long(d,b),high:new r.Long(N,y)}.high.lessThan(r.Long.ZERO)&&u.push("-");const $=y>>26&a;if($>>3==3){if($===w)return u.join("")+"Infinity";if($===c)return"NaN";e=y>>15&p,n=8+(y>>14&1)}else n=y>>14&7,e=y>>17&p;const v=e-h;if(l.parts[0]=(16383&y)+((15&n)<<14),l.parts[1]=N,l.parts[2]=b,l.parts[3]=d,0===l.parts[0]&&0===l.parts[1]&&0===l.parts[2]&&0===l.parts[3])g=!0;else for(f=3;f>=0;f--){let e=0;const r=L(l);if(l=r.quotient,e=r.rem.low)for(i=8;i>=0;i--)t[9*f+i]=e%10,e=Math.floor(e/10)}if(g)o=1,t[s]=0;else for(o=36;!t[s];)o-=1,s+=1;const E=o-1+v;if(E>=34||E<=-7||v>0){if(o>34)return u.push("0"),v>0?u.push("E+"+v):v<0&&u.push("E"+v),u.join("");u.push(`${t[s++]}`),(o-=1)&&u.push(".");for(let e=0;e<o;e++)u.push(`${t[s++]}`);u.push("E"),E>0?u.push("+"+E):u.push(`${E}`)}else if(v>=0)for(let e=0;e<o;e++)u.push(`${t[s++]}`);else{let e=o+v;if(e>0)for(let r=0;r<e;r++)u.push(`${t[s++]}`);else u.push("0");for(u.push(".");e++<0;)u.push("0");for(let r=0;r<o-Math.max(e-1,0);r++)u.push(`${t[s++]}`)}return u.join("")}toJSON(){return{$numberDecimal:this.toString()}}toExtendedJSON(){return{$numberDecimal:this.toString()}}static fromExtendedJSON(e){return N.fromString(e.$numberDecimal)}[Symbol.for("nodejs.util.inspect.custom")](){return this.inspect()}inspect(){return`Decimal128("${this.toString()}")`}}exports.Decimal128=N,Object.defineProperty(N.prototype,"_bsontype",{value:"Decimal128"});