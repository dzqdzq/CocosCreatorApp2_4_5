"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ObjectId=void 0;const t=require("buffer"),e=require("./ensure_buffer"),i=require("./parser/utils"),r=i.randomBytes(5),n=new RegExp("^[0-9a-fA-F]{24}$"),o=[];for(let t=0;t<256;t++)o[t]=(t<=15?"0":"")+t.toString(16);const s=[];let c=0;for(;c<10;)s[48+c]=c++;for(;c<16;)s[55+c]=s[87+c]=c++;const f=Symbol("id");class g{constructor(i){if(i instanceof g&&(this[f]=i.id,this.__id=i.__id),"object"==typeof i&&i&&"id"in i&&("toHexString"in i&&"function"==typeof i.toHexString?this[f]=t.Buffer.from(i.toHexString(),"hex"):this[f]="string"==typeof i.id?t.Buffer.from(i.id):i.id),null!=i&&"number"!=typeof i||(this[f]=g.generate("number"==typeof i?i:void 0),g.cacheHexString&&(this.__id=this.id.toString("hex"))),ArrayBuffer.isView(i)&&12===i.byteLength&&(this[f]=e.ensureBuffer(i)),"string"==typeof i)if(12===i.length){const e=t.Buffer.from(i);12===e.byteLength&&(this[f]=e)}else{if(24!==i.length||!n.test(i))throw new TypeError("Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters");this[f]=t.Buffer.from(i,"hex")}g.cacheHexString&&(this.__id=this.id.toString("hex"))}get id(){return this[f]}set id(t){this[f]=t,g.cacheHexString&&(this.__id=t.toString("hex"))}get generationTime(){return this.id.readInt32BE(0)}set generationTime(t){this.id.writeUInt32BE(t,0)}toHexString(){if(g.cacheHexString&&this.__id)return this.__id;const t=this.id.toString("hex");return g.cacheHexString&&!this.__id&&(this.__id=t),t}static getInc(){return g.index=(g.index+1)%16777215}static generate(e){"number"!=typeof e&&(e=~~(Date.now()/1e3));const i=g.getInc(),n=t.Buffer.alloc(12);return n.writeUInt32BE(e,0),n[4]=r[0],n[5]=r[1],n[6]=r[2],n[7]=r[3],n[8]=r[4],n[11]=255&i,n[10]=i>>8&255,n[9]=i>>16&255,n}toString(t){return t?this.id.toString(t):this.toHexString()}toJSON(){return this.toHexString()}equals(e){return void 0!==e&&null!==e&&(e instanceof g?this.toString()===e.toString():"string"==typeof e&&g.isValid(e)&&12===e.length&&this.id instanceof t.Buffer?e===this.id.toString("binary"):"string"==typeof e&&g.isValid(e)&&24===e.length?e.toLowerCase()===this.toHexString():"string"==typeof e&&g.isValid(e)&&12===e.length?t.Buffer.from(e).equals(this.id):"object"==typeof e&&"toHexString"in e&&"function"==typeof e.toHexString&&e.toHexString()===this.toHexString())}getTimestamp(){const t=new Date,e=this.id.readUInt32BE(0);return t.setTime(1e3*Math.floor(e)),t}static createPk(){return new g}static createFromTime(e){const i=t.Buffer.from([0,0,0,0,0,0,0,0,0,0,0,0]);return i.writeUInt32BE(e,0),new g(i)}static createFromHexString(e){if(void 0===e||null!=e&&24!==e.length)throw new TypeError("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");return new g(t.Buffer.from(e,"hex"))}static isValid(e){return null!=e&&("number"==typeof e||("string"==typeof e?12===e.length||24===e.length&&n.test(e):e instanceof g||(e instanceof t.Buffer&&12===e.length||"object"==typeof e&&"toHexString"in e&&"function"==typeof e.toHexString&&("string"==typeof e.id?12===e.id.length:24===e.toHexString().length&&n.test(e.id.toString("hex"))))))}toExtendedJSON(){return this.toHexString?{$oid:this.toHexString()}:{$oid:this.toString("hex")}}static fromExtendedJSON(t){return new g(t.$oid)}[Symbol.for("nodejs.util.inspect.custom")](){return this.inspect()}inspect(){return`ObjectId("${this.toHexString()}")`}}exports.ObjectId=g,g.index=~~(16777215*Math.random()),Object.defineProperty(g.prototype,"generate",{value:i.deprecate(t=>g.generate(t),"Please use the static `ObjectId.generate(time)` instead")}),Object.defineProperty(g.prototype,"getInc",{value:i.deprecate(()=>g.getInc(),"Please use the static `ObjectId.getInc()` instead")}),Object.defineProperty(g.prototype,"get_inc",{value:i.deprecate(()=>g.getInc(),"Please use the static `ObjectId.getInc()` instead")}),Object.defineProperty(g,"get_inc",{value:i.deprecate(()=>g.getInc(),"Please use the static `ObjectId.getInc()` instead")}),Object.defineProperty(g.prototype,"_bsontype",{value:"ObjectID"});