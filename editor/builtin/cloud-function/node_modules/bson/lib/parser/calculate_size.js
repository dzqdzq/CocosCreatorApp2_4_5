"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateObjectSize=void 0;const e=require("buffer"),t=require("../binary"),n=require("../constants"),u=require("./utils");function f(e,t,n){let u=5;if(Array.isArray(e))for(let f=0;f<e.length;f++)u+=r(f.toString(),e[f],t,!0,n);else{e.toBSON&&(e=e.toBSON());for(const f in e)u+=r(f,e[f],t,!1,n)}return u}function r(r,l,o=!1,b=!1,i=!1){switch(l&&l.toBSON&&(l=l.toBSON()),typeof l){case"string":return 1+e.Buffer.byteLength(r,"utf8")+1+4+e.Buffer.byteLength(l,"utf8")+1;case"number":return Math.floor(l)===l&&l>=n.JS_INT_MIN&&l<=n.JS_INT_MAX&&l>=n.BSON_INT32_MIN&&l<=n.BSON_INT32_MAX?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+5:(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+9;case"undefined":return b||!i?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1:0;case"boolean":return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+2;case"object":if(null==l||"MinKey"===l._bsontype||"MaxKey"===l._bsontype)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1;if("ObjectId"===l._bsontype||"ObjectID"===l._bsontype)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+13;if(l instanceof Date||u.isDate(l))return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+9;if(ArrayBuffer.isView(l)||l instanceof ArrayBuffer)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+6+l.byteLength;if("Long"===l._bsontype||"Double"===l._bsontype||"Timestamp"===l._bsontype)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+9;if("Decimal128"===l._bsontype)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+17;if("Code"===l._bsontype)return null!=l.scope&&Object.keys(l.scope).length>0?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+4+4+e.Buffer.byteLength(l.code.toString(),"utf8")+1+f(l.scope,o,i):(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+4+e.Buffer.byteLength(l.code.toString(),"utf8")+1;if("Binary"===l._bsontype)return l.sub_type===t.Binary.SUBTYPE_BYTE_ARRAY?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+(l.position+1+4+1+4):(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+(l.position+1+4+1);if("Symbol"===l._bsontype)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+e.Buffer.byteLength(l.value,"utf8")+4+1+1;if("DBRef"===l._bsontype){const t=Object.assign({$ref:l.collection,$id:l.oid},l.fields);return null!=l.db&&(t.$db=l.db),(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+f(t,o,i)}return l instanceof RegExp||"[object RegExp]"===Object.prototype.toString.call(l)?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+e.Buffer.byteLength(l.source,"utf8")+1+(l.global?1:0)+(l.ignoreCase?1:0)+(l.multiline?1:0)+1:"BSONRegExp"===l._bsontype?(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+e.Buffer.byteLength(l.pattern,"utf8")+1+e.Buffer.byteLength(l.options,"utf8")+1:(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+f(l,o,i)+1;case"function":if(l instanceof RegExp||"[object RegExp]"===Object.prototype.toString.call(l)||"[object RegExp]"===String.call(l))return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+e.Buffer.byteLength(l.source,"utf8")+1+(l.global?1:0)+(l.ignoreCase?1:0)+(l.multiline?1:0)+1;if(o&&null!=l.scope&&Object.keys(l.scope).length>0)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+4+4+e.Buffer.byteLength(u.normalizedFunctionString(l),"utf8")+1+f(l.scope,o,i);if(o)return(null!=r?e.Buffer.byteLength(r,"utf8")+1:0)+1+4+e.Buffer.byteLength(u.normalizedFunctionString(l),"utf8")+1}return 0}exports.calculateObjectSize=f;