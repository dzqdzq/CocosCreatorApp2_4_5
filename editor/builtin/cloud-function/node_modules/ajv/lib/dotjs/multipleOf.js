"use strict";module.exports=function(e,r,a){var t,s=" ",i=e.level,o=e.dataLevel,l=e.schema[r],d=e.schemaPath+e.util.getProperty(r),h=e.errSchemaPath+"/"+r,n=!e.opts.allErrors,m="data"+(o||""),u=e.opts.$data&&l&&l.$data;if(u?(s+=" var schema"+i+" = "+e.util.getData(l.$data,o,e.dataPathArr)+"; ",t="schema"+i):t=l,!u&&"number"!=typeof l)throw new Error(r+" must be number");s+="var division"+i+";if (",u&&(s+=" "+t+" !== undefined && ( typeof "+t+" != 'number' || "),s+=" (division"+i+" = "+m+" / "+t+", ",e.opts.multipleOfPrecision?s+=" Math.abs(Math.round(division"+i+") - division"+i+") > 1e-"+e.opts.multipleOfPrecision+" ":s+=" division"+i+" !== parseInt(division"+i+") ",s+=" ) ",u&&(s+="  )  "),s+=" ) {   ";var p=p||[];p.push(s),s="",!1!==e.createErrors?(s+=" { keyword: 'multipleOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { multipleOf: "+t+" } ",!1!==e.opts.messages&&(s+=" , message: 'should be multiple of ",s+=u?"' + "+t:t+"'"),e.opts.verbose&&(s+=" , schema:  ",s+=u?"validate.schema"+d:""+l,s+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),s+=" } "):s+=" {} ";var v=s;return s=p.pop(),!e.compositeRule&&n?e.async?s+=" throw new ValidationError(["+v+"]); ":s+=" validate.errors = ["+v+"]; return false; ":s+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} ",n&&(s+=" else { "),s};