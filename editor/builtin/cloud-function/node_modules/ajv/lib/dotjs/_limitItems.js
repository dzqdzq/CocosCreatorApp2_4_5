"use strict";module.exports=function(e,r,a){var t,s=" ",o=e.level,m=e.dataLevel,h=e.schema[r],l=e.schemaPath+e.util.getProperty(r),i=e.errSchemaPath+"/"+r,d=!e.opts.allErrors,u="data"+(m||""),n=e.opts.$data&&h&&h.$data;if(n?(s+=" var schema"+o+" = "+e.util.getData(h.$data,m,e.dataPathArr)+"; ",t="schema"+o):t=h,!n&&"number"!=typeof h)throw new Error(r+" must be number");s+="if ( ",n&&(s+=" ("+t+" !== undefined && typeof "+t+" != 'number') || "),s+=" "+u+".length "+("maxItems"==r?">":"<")+" "+t+") { ";var c=r,p=p||[];p.push(s),s="",!1!==e.createErrors?(s+=" { keyword: '"+(c||"_limitItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(i)+" , params: { limit: "+t+" } ",!1!==e.opts.messages&&(s+=" , message: 'should NOT have ",s+="maxItems"==r?"more":"fewer",s+=" than ",s+=n?"' + "+t+" + '":""+h,s+=" items' "),e.opts.verbose&&(s+=" , schema:  ",s+=n?"validate.schema"+l:""+h,s+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),s+=" } "):s+=" {} ";var v=s;return s=p.pop(),!e.compositeRule&&d?e.async?s+=" throw new ValidationError(["+v+"]); ":s+=" validate.errors = ["+v+"]; return false; ":s+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} ",d&&(s+=" else { "),s};