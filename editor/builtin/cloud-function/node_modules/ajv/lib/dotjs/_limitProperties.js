"use strict";module.exports=function(e,r,a){var t,s=" ",o=e.level,h=e.dataLevel,m=e.schema[r],i=e.schemaPath+e.util.getProperty(r),l=e.errSchemaPath+"/"+r,p=!e.opts.allErrors,d="data"+(h||""),u=e.opts.$data&&m&&m.$data;if(u?(s+=" var schema"+o+" = "+e.util.getData(m.$data,h,e.dataPathArr)+"; ",t="schema"+o):t=m,!u&&"number"!=typeof m)throw new Error(r+" must be number");s+="if ( ",u&&(s+=" ("+t+" !== undefined && typeof "+t+" != 'number') || "),s+=" Object.keys("+d+").length "+("maxProperties"==r?">":"<")+" "+t+") { ";var n=r,c=c||[];c.push(s),s="",!1!==e.createErrors?(s+=" { keyword: '"+(n||"_limitProperties")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { limit: "+t+" } ",!1!==e.opts.messages&&(s+=" , message: 'should NOT have ",s+="maxProperties"==r?"more":"fewer",s+=" than ",s+=u?"' + "+t+" + '":""+m,s+=" properties' "),e.opts.verbose&&(s+=" , schema:  ",s+=u?"validate.schema"+i:""+m,s+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),s+=" } "):s+=" {} ";var v=s;return s=c.pop(),!e.compositeRule&&p?e.async?s+=" throw new ValidationError(["+v+"]); ":s+=" validate.errors = ["+v+"]; return false; ":s+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} ",p&&(s+=" else { "),s};