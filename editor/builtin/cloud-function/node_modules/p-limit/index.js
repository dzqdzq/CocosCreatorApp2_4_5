"use strict";const e=require("p-try"),t=t=>{if(!Number.isInteger(t)&&t!==1/0||!(t>0))return Promise.reject(new TypeError("Expected `concurrency` to be a number from 1 and up"));const r=[];let n=0;const u=()=>{n--,r.length>0&&r.shift()()},o=(t,r,...o)=>{n++;const s=e(t,...o);r(s),s.then(u,u)},s=(e,...u)=>new Promise(s=>((e,u,...s)=>{n<t?o(e,u,...s):r.push(o.bind(null,e,u,...s))})(e,s,...u));return Object.defineProperties(s,{activeCount:{get:()=>n},pendingCount:{get:()=>r.length},clearQueue:{value:()=>{r.length=0}}}),s};module.exports=t,module.exports.default=t;