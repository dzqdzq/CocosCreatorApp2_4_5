"use strict";var e=this&&this.__decorate||function(e,t,n,o){var i,r=arguments.length,s=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(r<3?i(s):r>3?i(t,n,s):i(t,n))||s);return r>3&&s&&Object.defineProperty(t,n,s),s},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EnvService=void 0;const n=t(require("cos-nodejs-sdk-v5")),o=t(require("util")),i=require("../error"),r=require("../utils"),s=require("../cam"),a=require("../constant"),c=require("../billing");class l{constructor(e){this.environment=e,this.envId=e.getEnvId(),this.cloudService=new r.CloudService(e.cloudBaseContext,"tcb","2018-06-08"),this.camService=new s.CamService(e.cloudBaseContext),this.billService=new c.BillingService(e.cloudBaseContext)}async listEnvs(){return this.cloudService.request("DescribeEnvs")}async createEnv(e){const{name:t,paymentMode:n,channel:o="qc_console"}=e,{Initialized:s}=await this.checkTcbService();if(!s){let e=!1;try{await this.camService.getRole(a.ROLE_NAME.TCB);e=!0}catch(e){if("InvalidParameter.RoleNotExist"!==e.code)throw e}if(!e){const e=await this.camService.createRole({RoleName:a.ROLE_NAME.TCB,Description:"云开发(TCB)操作权限含在访问管理(CAM)创建角色，新增角色载体，给角色绑定策略；含读写对象存储(COS)数据；含读写无服务器云函数(SCF)数据；含读取云监控(Monitor)数据。",PolicyDocument:'{"version":"2.0","statement":[{"action":"sts:AssumeRole","effect":"allow","principal":{"service":["scf.qcloud.com","tcb.cloud.tencent.com", "cvm.qcloud.com"]}}]}'}),{RoleId:t}=e;await this.camService.attachRolePolicies({RoleName:a.ROLE_NAME.TCB,PolicyName:["QcloudAccessForTCBRole","QcloudAccessForTCBRoleInAccessCloudBaseRun"]})}await this.initTcb({Channel:o,Source:"qcloud"})}const c={Alias:t,EnvId:`${t}-${r.guid6()}`,Source:"qcloud"};o&&(c.Channel=o);const{EnvId:l}=await this.cloudService.request("CreateEnv",c),u=n||"postpay";let d=!1,v=!1,h=!1,m=null;if("prepay"===u){const e=[{GoodsCategoryId:101183,RegionId:1,ZoneId:0,GoodsNum:1,ProjectId:0,PayMode:1,Platform:1,GoodsDetail:JSON.stringify({productCode:"p_tcb",subProductCode:"sp_tcb_basic",resourceId:l,pid:16677,timeUnit:"m",timeSpan:1,tcb_cos:1,tcb_cdn:1,tcb_scf:1,tcb_mongodb:1,region:"ap-shanghai",zone:"ap-shanghai-1",source:"qcloud",envId:l,packageId:"basic",isAutoRenew:"true",tranType:1,productInfo:[{name:"套餐版本",value:"基础版 1"},{name:"存储空间",value:"5GB"},{name:"CDN流量",value:"5GB"},{name:"云函数资源使用量",value:"4万GBs"},{name:"数据库容量",value:"2GB"},{name:"数据库同时连接数",value:"20个"}]})}];let t=[];try{const{OrderIds:n}=await this.billService.GenerateDeals(e);t=n,d=!0}catch(e){m=e}if(d)try{const{OrderIds:e}=await this.billService.PayDeals(t);if(e[0]!==t[0])throw new i.CloudBaseError("支付成功的订单号不一致");v=!0}catch(e){m=new i.CloudBaseError("预付费订单支付失败，请进入订单管理页面(https://console.cloud.tencent.com/deal)重新支付",{original:e})}}if("postpay"===u)try{const{TranId:e}=await this.CreatePostpayPackage(l);h=!0}catch(e){m=e}if("prepay"===u){if(!d)throw await this.destroyEnv(l),m;if(!v)throw m}if("postpay"===u&&!h)throw await this.destroyEnv(l),m;return{envId:l}}async getEnvAuthDomains(){return this.cloudService.request("DescribeAuthDomains",{EnvId:this.envId})}async createEnvDomain(e){const t=await this.cloudService.request("CreateAuthDomain",{EnvId:this.envId,Domains:e}),n=e.map(async e=>{this.modifyCosCorsDomain(e)});return await Promise.all(n),t}async deleteEnvDomain(e){const{Domains:t}=await this.getEnvAuthDomains(),n=t.filter(t=>e.includes(t.Domain)).map(e=>e.Id),o=await this.cloudService.request("DeleteAuthDomain",{EnvId:this.envId,DomainIds:n}),i=e.map(async e=>{this.modifyCosCorsDomain(e,!0)});return await Promise.all(i),o}async checkTcbService(){return this.cloudService.request("CheckTcbService",{})}async initTcb(e){let t={};return e&&(t=Object.assign({},e)),this.cloudService.request("InitTcb",t)}async CreatePostpayPackage(e,t){const n=t||"qcloud";return this.cloudService.request("CreatePostpayPackage",{EnvId:e,Source:n})}async destroyEnv(e){return this.cloudService.request("DestroyEnv",{EnvId:e})}async getEnvInfo(){const{EnvList:e,RequestId:t}=await this.cloudService.request("DescribeEnvs",{EnvId:this.envId});return{EnvInfo:(null===e||void 0===e?void 0:e.length)?e[0]:{},RequestId:t}}async updateEnvInfo(e){return this.cloudService.request("ModifyEnv",{EnvId:this.envId,Alias:e})}async getLoginConfigList(){return this.cloudService.request("DescribeLoginConfigs",{EnvId:this.envId})}async createLoginConfig(e,t,n){let o=n;return"ANONYMOUS"===e&&(o="anonymous"),this.cloudService.request("CreateLoginConfig",{EnvId:this.envId,Platform:e,PlatformId:t,PlatformSecret:o?r.rsaEncrypt(o):void 0,Status:"ENABLE"})}async updateLoginConfig(e,t="ENABLE",n="",o=""){let s=o;if(!["ENABLE","DISABLE"].includes(t))throw new i.CloudBaseError(`Invalid status value: ${t}. Only support 'ENABLE', 'DISABLE'`);const a={EnvId:this.envId,ConfigId:e,Status:t};return"anonymous"===n&&(s="anonymous"),n&&(a.PlatformId=n),s&&(a.PlatformSecret=r.rsaEncrypt(s)),this.cloudService.request("UpdateLoginConfig",a)}async createCustomLoginKeys(){return this.cloudService.request("CreateCustomLoginKeys",{EnvId:this.envId})}async getCOSDomains(){const e=this.getCos(),t=o.default.promisify(e.getBucketCors).bind(e),{bucket:n,region:i}=this.getStorageConfig();return(await t({Bucket:n,Region:i})).CORSRules}async modifyCosCorsDomain(e,t=!1){const n=this.getCos(),i=o.default.promisify(n.putBucketCors).bind(n),{bucket:r,region:s}=this.getStorageConfig();let a=await this.getCOSDomains();a=a.filter(t=>!(t.AllowedOrigins&&2===t.AllowedOrigins.length&&t.AllowedOrigins[0]===`http://${e}`&&t.AllowedOrigins[1]===`https://${e}`)),t||a.push({AllowedOrigin:[`http://${e}`,`https://${e}`],AllowedMethod:["GET","POST","PUT","DELETE","HEAD"],AllowedHeader:["*"],ExposeHeader:["Etag","Date"],MaxAgeSeconds:"5"}),await i({Bucket:r,Region:s,CORSRules:a})}getCos(){const{secretId:e,secretKey:t,token:o}=this.environment.getAuthConfig();return new n.default({SecretId:e,SecretKey:t,SecurityToken:o})}getStorageConfig(){var e;const t=this.environment.lazyEnvironmentConfig,n=null===(e=null===t||void 0===t?void 0:t.Storages)||void 0===e?void 0:e[0],{Region:o,Bucket:i}=n;return{env:t.EnvId,region:o,bucket:i}}}e([r.preLazy()],l.prototype,"createEnvDomain",null),e([r.preLazy()],l.prototype,"deleteEnvDomain",null),exports.EnvService=l;