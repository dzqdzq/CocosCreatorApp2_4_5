"use strict";var e=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FunctionService=void 0;const n=t(require("fs")),i=t(require("path")),o=require("./packer"),a=require("../error"),r=require("../utils"),s=require("../constant");function c(e){return"Nodejs10.15"===e||"Nodejs8.9"===e||(null===e||void 0===e?void 0:e.includes("Nodejs"))}class u{constructor(e){this.environment=e,this.scfService=new r.CloudService(e.cloudBaseContext,"scf","2018-04-16"),this.vpcService=new r.CloudService(e.cloudBaseContext,"vpc","2017-03-12")}async updateFunctionIncrementalCode(e){const{namespace:t}=this.getFunctionConfig(),{functionRootPath:n,func:i,deleteFiles:r,addFiles:s}=e,{name:c,runtime:u}=i,l={FunctionName:c,Namespace:t};let d,p;if(r&&(l.DeleteFiles=r),s){const e="Java8"===u?o.CodeType.JavaFile:o.CodeType.File;if(d=new o.FunctionPacker({codeType:e,name:c,root:n,ignore:[],incrementalPath:s}),await d.build(),!(p=await d.getBase64Code()))throw new a.CloudBaseError("函数不存在！");l.AddFiles=p}return this.scfService.request("UpdateFunctionIncrementalCode",l)}async createFunction(e){const{namespace:t}=this.getFunctionConfig(),{func:n,functionRootPath:i,force:o=!1,base64Code:r,codeSecret:s,functionPath:u}=e,l=n.name,d=function(e){var t,n,i;const{func:o,codeSecret:a,baseParams:r}=e;let s;s=c(o.runtime)?"TRUE":"FALSE",void 0!==o.installDependency&&(s=o.installDependency?"TRUE":"FALSE");const u=Object.keys(o.envVariables||{}).map(e=>({Key:e,Value:o.envVariables[e]})),l=void 0===(null===o||void 0===o?void 0:o.l5)?null:(null===o||void 0===o?void 0:o.l5)?"TRUE":"FALSE",d=Object.assign(Object.assign({},r),{FunctionName:o.name,L5Enable:l});return d.Role=o.role||d.Role,u.length&&(d.Environment={Variables:u}),d.Handler=o.handler||"index.main",d.Timeout=Number(o.timeout)||10,d.Runtime=o.runtime||"Nodejs8.9",d.VpcConfig={SubnetId:(null===(t=null===o||void 0===o?void 0:o.vpc)||void 0===t?void 0:t.subnetId)||"",VpcId:(null===(n=null===o||void 0===o?void 0:o.vpc)||void 0===n?void 0:n.vpcId)||""},d.MemorySize=o.memorySize||256,d.InstallDependency=s,(a||o.codeSecret)&&(d.CodeSecret=a||o.codeSecret),(null===(i=null===o||void 0===o?void 0:o.layers)||void 0===i?void 0:i.length)&&(d.Layers=o.layers),d}({func:n,codeSecret:s,baseParams:{Namespace:t,Role:"TCB_QcsRole",Stamp:"MINI_QCBASE"}});d.Code=await this.getCodeParams({func:n,base64Code:r,functionPath:u,functionRootPath:i},d.InstallDependency);try{const e=await this.scfService.request("CreateFunction",d);return await this.waitFunctionActive(l,s),await this.retryCreateTrigger(l,n.triggers),n.path&&await this.createAccessPath(l,n.path),await this.waitFunctionActive(l,s),e}catch(e){if(("ResourceInUse.FunctionName"===e.code||"ResourceInUse.Function"===e.code)&&o){const e=await this.updateFunctionCode({func:n,base64Code:r,functionPath:u,functionRootPath:i,codeSecret:s});await this.waitFunctionActive(l,s);const t=await this.updateFunctionConfig(n);await this.waitFunctionActive(l,s);const o=await this.retryCreateTrigger(l,n.triggers);return n.path&&await this.createAccessPath(l,n.path),await this.waitFunctionActive(l,s),{triggerRes:o,configRes:t,codeRes:e}}if(e.message&&!o)throw new a.CloudBaseError(`[${l}] 部署失败：\n${e.message}`,{code:e.code,requestId:e.requestId});throw e}}async getFunctionList(e=20,t=0){const{namespace:n}=this.getFunctionConfig();return await this.scfService.request("ListFunctions",{Namespace:n,Limit:e,Offset:t})}async listFunctions(e=20,t=0){const{namespace:n}=this.getFunctionConfig(),i=await this.scfService.request("ListFunctions",{Namespace:n,Limit:e,Offset:t}),{Functions:o=[]}=i,a=[];return o.forEach(e=>{const{FunctionId:t,FunctionName:n,Runtime:i,AddTime:o,ModTime:r,Status:s}=e;a.push({FunctionId:t,FunctionName:n,Runtime:i,AddTime:o,ModTime:r,Status:s})}),a}async deleteFunction(e){const{namespace:t}=this.getFunctionConfig();return this.scfService.request("DeleteFunction",{FunctionName:e,Namespace:t})}async getFunctionDetail(e,t){const{namespace:n}=this.getFunctionConfig(),i={FunctionName:e,Namespace:n,ShowCode:"TRUE"};t&&(i.CodeSecret=t);const o=await this.scfService.request("GetFunction",i),{VpcId:a="",SubnetId:r=""}=o.VpcConfig||{};if(a&&r)try{const e=await this.getVpcs(),t=await this.getSubnets(a),n=e.find(e=>e.VpcId===a),i=t.find(e=>e.SubnetId===r);o.VpcConfig={vpc:n,subnet:i}}catch(e){o.VpcConfig={vpc:"",subnet:""}}return o}async getFunctionLogs(e){const{name:t,offset:n=0,limit:i=10,order:o,orderBy:a,startTime:r,endTime:s,requestId:c}=e,{namespace:u}=this.getFunctionConfig(),l={Namespace:u,FunctionName:t,Offset:n,Limit:i,Order:o,OrderBy:a,StartTime:r,EndTime:s,FunctionRequestId:c};return await this.scfService.request("GetFunctionLogs",l)}async updateFunctionConfig(e){var t,n,i;const{namespace:o}=this.getFunctionConfig(),a=Object.keys(e.envVariables||{}).map(t=>({Key:t,Value:e.envVariables[t]})),r=void 0===e.l5?null:e.l5?"TRUE":"FALSE",s={FunctionName:e.name,Namespace:o,L5Enable:r};return a.length&&(s.Environment={Variables:a}),e.timeout&&(s.Timeout=e.timeout),e.runtime&&(s.Runtime=e.runtime),s.VpcConfig={SubnetId:(null===(t=null===e||void 0===e?void 0:e.vpc)||void 0===t?void 0:t.subnetId)||"",VpcId:(null===(n=null===e||void 0===e?void 0:e.vpc)||void 0===n?void 0:n.vpcId)||""},e.memorySize&&(s.MemorySize=e.memorySize),c(e.runtime)&&(s.InstallDependency="TRUE"),void 0!==e.installDependency&&(s.InstallDependency=e.installDependency?"TRUE":"FALSE"),(null===(i=null===e||void 0===e?void 0:e.layers)||void 0===i?void 0:i.length)&&(s.Layers=e.layers),this.scfService.request("UpdateFunctionConfiguration",s)}async updateFunctionCode(e){const{func:t,functionRootPath:n,base64Code:i,codeSecret:o,functionPath:r}=e,s=t.name,{namespace:u}=this.getFunctionConfig();let l;l=c(t.runtime)?"TRUE":"FALSE",void 0!==t.installDependency&&(l=t.installDependency?"TRUE":"FALSE");const d=await this.getCodeParams({func:t,functionPath:r,functionRootPath:n,base64Code:i},l),p=Object.assign({FunctionName:s,Namespace:u,Handler:t.handler||"index.main",InstallDependency:l},d);o&&(p.CodeSecret=o);try{await this.waitFunctionActive(s,o);const e=await this.scfService.request("UpdateFunctionCode",p);return l&&!0===t.isWaitInstall&&await this.waitFunctionActive(s,o),e}catch(e){throw new a.CloudBaseError(`[${s}] 函数代码更新失败： ${e.message}`,{code:e.code})}}async invokeFunction(e,t){const{namespace:n}=this.getFunctionConfig(),i={FunctionName:e,Namespace:n,LogType:"Tail"};t&&(i.ClientContext=JSON.stringify(t));try{const{RequestId:t,Result:n}=await this.scfService.request("Invoke",i);return Object.assign({RequestId:t},n)}catch(t){throw new a.CloudBaseError(`[${e}] 调用失败：\n${t.message}`)}}async copyFunction(e,t,n,i=!1){const{namespace:o}=this.getFunctionConfig();if(!o||!e||!t)throw new a.CloudBaseError("参数缺失");return this.scfService.request("CopyFunction",{FunctionName:e,NewFunctionName:t,Namespace:o,TargetNamespace:n||o,Override:!!i})}async createFunctionTriggers(e,t=[]){if(!t||!t.length)return null;const{namespace:n}=this.getFunctionConfig(),i=t.map(e=>{if("timer"!==e.type)throw new a.CloudBaseError(`不支持的触发器类型 [${e.type}]，目前仅支持定时触发器（timer）！`);return{TriggerName:e.name,Type:e.type,TriggerDesc:e.config}});return this.scfService.request("BatchCreateTrigger",{FunctionName:e,Namespace:n,Triggers:JSON.stringify(i),Count:i.length})}async deleteFunctionTrigger(e,t){const{namespace:n}=this.getFunctionConfig();return this.scfService.request("DeleteTrigger",{FunctionName:e,Namespace:n,TriggerName:t,Type:"timer"})}async getFunctionDownloadUrl(e,t){const{namespace:n}=this.getFunctionConfig(),i={FunctionName:e,Namespace:n};t&&(i.CodeSecret=t);try{const{Url:t,CodeSha256:n,RequestId:o}=await this.scfService.request("GetFunctionAddress",i);return{Url:t,RequestId:o,CodeSha256:n}}catch(t){throw new a.CloudBaseError(`[${e}] 获取函数代码下载链接失败：\n${t.message}`)}}async createLayer(e){const{contentPath:t="",name:o,base64Content:s="",runtimes:c=[],description:u="",licenseInfo:l=""}=e;let d;if(s)d=s;else if(r.isDirectory(t)){const e=i.default.parse(t).name,o=i.default.join(process.cwd(),`temp-${e}.zip`);r.checkFullAccess(o)&&r.delSync(o),await r.compressToZip({dirPath:t,outputPath:o}),d=(await n.default.promises.readFile(o)).toString("base64"),r.delSync(o)}else{if(".zip"!==i.default.extname(t))throw new a.CloudBaseError("文件类型不正确，目前只支持 ZIP 文件！");d=(await n.default.promises.readFile(t)).toString("base64")}return this.scfService.request("PublishLayerVersion",{LayerName:o,CompatibleRuntimes:c,Content:{ZipFile:d},Description:u,LicenseInfo:l})}async deleteLayerVersion(e){const{name:t,version:n}=e;return this.scfService.request("DeleteLayerVersion",{LayerName:t,LayerVersion:n})}async listLayerVersions(e){const{name:t,runtimes:n}=e;let i={LayerName:t};return(null===n||void 0===n?void 0:n.length)&&(i.CompatibleRuntime=n),this.scfService.request("ListLayerVersions",i)}async listLayers(e){const{limit:t=20,offset:n=0,runtime:i,searchKey:o}=e;let a={Limit:t,Offset:n,SearchKey:o};return i&&(a.CompatibleRuntime=i),this.scfService.request("ListLayers",a)}async getLayerVersion(e){const{name:t,version:n}=e;return this.scfService.request("GetLayerVersion",{LayerName:t,LayerVersion:n})}async createAccessPath(e,t){const n=this.environment.getAccessService();try{await n.createAccess({name:e,path:t})}catch(t){if("InvalidParameter.APICreated"!==t.code)throw t;{const{APISet:i}=await n.getAccessList({name:e});if((null===i||void 0===i?void 0:i[0].Name)!==e||1!==(null===i||void 0===i?void 0:i[0].Type))throw t}}}async getCodeParams(e,t){const{func:n,functionPath:i,functionRootPath:r,base64Code:s}=e;if((null===s||void 0===s?void 0:s.length)>167772160)throw new a.CloudBaseError("base64 不能大于 20 MB");if(null===s||void 0===s?void 0:s.length)return{ZipFile:s};const c="Java8"===n.runtime?o.CodeType.JavaFile:o.CodeType.File,u="TRUE"===t?["node_modules/**/*","node_modules",...n.ignore||[]]:[...n.ignore||[]],l=new o.FunctionPacker({ignore:u,codeType:c,functionPath:i,name:n.name,root:r});if(await l.build(),await l.isReachMaxSize())throw new a.CloudBaseError("函数代码不能大于 50MB");const d=await l.getBase64Code();if(!(null===d||void 0===d?void 0:d.length))throw new a.CloudBaseError("文件不能为空");return{ZipFile:d}}async getTempCosInfo(e){const{env:t,appId:n}=await this.getFunctionConfig();return this.scfService.request("GetTempCosInfo",{ObjectPath:`${n}/${t}/${e}.zip"`})}async retryCreateTrigger(e,t,n=0){try{return await this.createFunctionTriggers(e,t)}catch(i){if(n<3){return await r.sleep(500),await this.retryCreateTrigger(e,t,n+1)}throw i}}getFunctionConfig(){var e;const t=this.environment.lazyEnvironmentConfig,n=t.Functions[0].Namespace,i=null===(e=t.Storages[0])||void 0===e?void 0:e.AppId,{proxy:o}=this.environment.cloudBaseContext;return{proxy:o,appId:i,namespace:n,env:t.EnvId}}async getVpcs(){const{VpcSet:e}=await this.vpcService.request("DescribeVpcs");return e}async getSubnets(e){const{SubnetSet:t}=await this.vpcService.request("DescribeSubnets",{Filters:[{Name:"vpc-id",Values:[e]}]});return t}async waitFunctionActive(e,t){let n,i,o;return new Promise((r,c)=>{i=setTimeout(()=>{clearInterval(n),o||c(new a.CloudBaseError("函数状态异常，检查超时"))},3e5),n=setInterval(async()=>{try{const{Status:o}=await this.getFunctionDetail(e,t);if(o===s.SCF_STATUS.CREATING||o===s.SCF_STATUS.UPDATING)return;if(o===s.SCF_STATUS.CREATE_FAILED)throw new a.CloudBaseError("云函数创建失败");clearInterval(n),clearTimeout(i),r()}catch(e){clearInterval(n),clearTimeout(i),c(e)}o=!0},1e3)})}}e([r.preLazy()],u.prototype,"updateFunctionIncrementalCode",null),e([r.preLazy()],u.prototype,"createFunction",null),e([r.preLazy()],u.prototype,"getFunctionList",null),e([r.preLazy()],u.prototype,"listFunctions",null),e([r.preLazy()],u.prototype,"deleteFunction",null),e([r.preLazy()],u.prototype,"getFunctionDetail",null),e([r.preLazy()],u.prototype,"getFunctionLogs",null),e([r.preLazy()],u.prototype,"updateFunctionConfig",null),e([r.preLazy()],u.prototype,"updateFunctionCode",null),e([r.preLazy()],u.prototype,"invokeFunction",null),e([r.preLazy()],u.prototype,"copyFunction",null),e([r.preLazy()],u.prototype,"createFunctionTriggers",null),e([r.preLazy()],u.prototype,"deleteFunctionTrigger",null),e([r.preLazy()],u.prototype,"getFunctionDownloadUrl",null),e([r.preLazy()],u.prototype,"createLayer",null),e([r.preLazy()],u.prototype,"deleteLayerVersion",null),e([r.preLazy()],u.prototype,"listLayerVersions",null),e([r.preLazy()],u.prototype,"listLayers",null),e([r.preLazy()],u.prototype,"getLayerVersion",null),e([r.preLazy()],u.prototype,"createAccessPath",null),e([r.preLazy()],u.prototype,"getCodeParams",null),e([r.preLazy()],u.prototype,"getTempCosInfo",null),exports.FunctionService=u;