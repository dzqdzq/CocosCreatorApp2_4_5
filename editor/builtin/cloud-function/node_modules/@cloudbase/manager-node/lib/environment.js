"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Environment=void 0;const e=require("./database"),r=require("./function"),t=require("./storage"),i=require("./env"),n=require("./common"),s=require("./error"),c=require("./constant"),o=require("./utils"),v=require("./hosting"),u=require("./third"),h=require("./access"),S=require("./user"),a=require("./cloudBaseRun");exports.Environment=class{constructor(n,s){this.inited=!1,this.envId=s,this.cloudBaseContext=n,this.functionService=new r.FunctionService(this),this.databaseService=new e.DatabaseService(this),this.storageService=new t.StorageService(this),this.envService=new i.EnvService(this),this.hostingService=new v.HostingService(this),this.thirdService=new u.ThirdService(this),this.accessService=new h.AccessService(this),this.userService=new S.UserService(this),this.cloudBaseRunService=new a.CloudBaseRunService(this)}async lazyInit(){return this.inited?this.lazyEnvironmentConfig:this.envService.getEnvInfo().then(e=>{if(this.lazyEnvironmentConfig=e.EnvInfo,!this.lazyEnvironmentConfig.EnvId)throw new s.CloudBaseError(`Environment ${this.envId} not found`);return this.inited=!0,this.lazyEnvironmentConfig})}getEnvId(){return this.envId}getStorageService(){return this.storageService}getDatabaseService(){return this.databaseService}getFunctionService(){return this.functionService}getEnvService(){return this.envService}getHostingService(){return this.hostingService}getThirdService(){return this.thirdService}getAccessService(){return this.accessService}getUserService(){return this.userService}getCloudBaseRunService(){return this.cloudBaseRunService}getCommonService(e="tcb",r){return new n.CommonService(this,e,r)}getServicesEnvInfo(){return this.envService.getEnvInfo().then(e=>e.EnvInfo)}getAuthConfig(){let{secretId:e,secretKey:r,token:t,proxy:i,region:n}=this.cloudBaseContext;const s=this.getEnvId();if(!e||!r){const i=o.getEnvVar(c.ENV_NAME.ENV_SECRETID),n=o.getEnvVar(c.ENV_NAME.ENV_SECRETKEY),s=o.getEnvVar(c.ENV_NAME.ENV_SESSIONTOKEN);if(!i||!n)throw o.getRuntime()===c.RUN_ENV.SCF?new Error("missing authoration key, redeploy the function"):new Error("missing secretId or secretKey of tencent cloud");e=i,r=n,t=s}return{envId:s,secretId:e,secretKey:r,token:t,proxy:i,region:n}}};