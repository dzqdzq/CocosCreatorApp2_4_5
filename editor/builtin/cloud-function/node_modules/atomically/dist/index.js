"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.writeFileSync=exports.writeFile=exports.readFileSync=exports.readFile=void 0;const e=require("path"),t=require("./consts"),n=require("./utils/fs"),a=require("./utils/lang"),d=require("./utils/scheduler"),i=require("./utils/temp");exports.readFile=function e(d,i=t.DEFAULT_READ_OPTIONS){var l;if(a.default.isString(i))return e(d,{encoding:i});const r=Date.now()+(null!==(l=i.timeout)&&void 0!==l?l:t.DEFAULT_TIMEOUT_ASYNC);return n.default.readFileRetry(r)(d,i)},exports.readFileSync=function e(d,i=t.DEFAULT_READ_OPTIONS){var l;if(a.default.isString(i))return e(d,{encoding:i});const r=Date.now()+(null!==(l=i.timeout)&&void 0!==l?l:t.DEFAULT_TIMEOUT_SYNC);return n.default.readFileSyncRetry(r)(d,i)};const l=(e,n,d,i)=>{if(a.default.isFunction(d))return l(e,n,t.DEFAULT_WRITE_OPTIONS,d);const u=r(e,n,d);return i&&u.then(i,i),u};exports.writeFile=l;const r=async(l,u,c=t.DEFAULT_WRITE_OPTIONS)=>{var o;if(a.default.isString(c))return r(l,u,{encoding:c});const f=Date.now()+(null!==(o=c.timeout)&&void 0!==o?o:t.DEFAULT_TIMEOUT_ASYNC);let s=null,m=null,y=null,w=null,p=null;try{c.schedule&&(s=await c.schedule(l)),m=await d.default.schedule(l),l=await n.default.realpathAttempt(l)||l,[w,y]=i.default.get(l,c.tmpCreate||i.default.create,!(!1===c.tmpPurge));const r=t.IS_POSIX&&a.default.isUndefined(c.chown),o=a.default.isUndefined(c.mode);if(r||o){const e=await n.default.statAttempt(l);e&&(c={...c},r&&(c.chown={uid:e.uid,gid:e.gid}),o&&(c.mode=e.mode))}const E=e.dirname(l);await n.default.mkdirAttempt(E,{mode:t.DEFAULT_FOLDER_MODE,recursive:!0}),p=await n.default.openRetry(f)(w,"w",c.mode||t.DEFAULT_FILE_MODE),c.tmpCreated&&c.tmpCreated(w),a.default.isString(u)?await n.default.writeRetry(f)(p,u,0,c.encoding||t.DEFAULT_ENCODING):a.default.isUndefined(u)||await n.default.writeRetry(f)(p,u,0,u.length,0),!1!==c.fsync&&(!1!==c.fsyncWait?await n.default.fsyncRetry(f)(p):n.default.fsyncAttempt(p)),await n.default.closeRetry(f)(p),p=null,c.chown&&await n.default.chownAttempt(w,c.chown.uid,c.chown.gid),c.mode&&await n.default.chmodAttempt(w,c.mode);try{await n.default.renameRetry(f)(w,l)}catch(e){if("ENAMETOOLONG"!==e.code)throw e;await n.default.renameRetry(f)(w,i.default.truncate(l))}y(),w=null}finally{p&&await n.default.closeAttempt(p),w&&i.default.purge(w),s&&s(),m&&m()}},u=(d,l,r=t.DEFAULT_WRITE_OPTIONS)=>{var c;if(a.default.isString(r))return u(d,l,{encoding:r});const o=Date.now()+(null!==(c=r.timeout)&&void 0!==c?c:t.DEFAULT_TIMEOUT_SYNC);let f=null,s=null,m=null;try{d=n.default.realpathSyncAttempt(d)||d,[s,f]=i.default.get(d,r.tmpCreate||i.default.create,!(!1===r.tmpPurge));const u=t.IS_POSIX&&a.default.isUndefined(r.chown),c=a.default.isUndefined(r.mode);if(u||c){const e=n.default.statSyncAttempt(d);e&&(r={...r},u&&(r.chown={uid:e.uid,gid:e.gid}),c&&(r.mode=e.mode))}const y=e.dirname(d);n.default.mkdirSyncAttempt(y,{mode:t.DEFAULT_FOLDER_MODE,recursive:!0}),m=n.default.openSyncRetry(o)(s,"w",r.mode||t.DEFAULT_FILE_MODE),r.tmpCreated&&r.tmpCreated(s),a.default.isString(l)?n.default.writeSyncRetry(o)(m,l,0,r.encoding||t.DEFAULT_ENCODING):a.default.isUndefined(l)||n.default.writeSyncRetry(o)(m,l,0,l.length,0),!1!==r.fsync&&(!1!==r.fsyncWait?n.default.fsyncSyncRetry(o)(m):n.default.fsyncAttempt(m)),n.default.closeSyncRetry(o)(m),m=null,r.chown&&n.default.chownSyncAttempt(s,r.chown.uid,r.chown.gid),r.mode&&n.default.chmodSyncAttempt(s,r.mode);try{n.default.renameSyncRetry(o)(s,d)}catch(e){if("ENAMETOOLONG"!==e.code)throw e;n.default.renameSyncRetry(o)(s,i.default.truncate(d))}f(),s=null}finally{m&&n.default.closeSyncAttempt(m),s&&i.default.purge(s)}};exports.writeFileSync=u;