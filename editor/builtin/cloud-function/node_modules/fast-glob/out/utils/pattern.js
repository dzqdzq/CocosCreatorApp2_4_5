"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.matchAny=exports.convertPatternsToRe=exports.makeRe=exports.getPatternParts=exports.expandBraceExpansion=exports.expandPatternsWithBraceExpansion=exports.isAffectDepthOfReadingPattern=exports.endsWithSlashGlobStar=exports.hasGlobStar=exports.getBaseDirectory=exports.getPositivePatterns=exports.getNegativePatterns=exports.isPositivePattern=exports.isNegativePattern=exports.convertToNegativePattern=exports.convertToPositivePattern=exports.isDynamicPattern=exports.isStaticPattern=void 0;const t=require("path"),e=require("glob-parent"),r=require("micromatch"),n=require("picomatch"),s="**",o="\\",a=/[*?]|^!/,i=/\[.*]/,c=/(?:^|[^!*+?@])\(.*\|.*\)/,p=/[!*+?@]\(.*\)/,u=/{.*(?:,|\.\.).*}/;function x(t,e={}){return!P(t,e)}function P(t,e={}){return""!==t&&(!(!1!==e.caseSensitiveMatch&&!t.includes(o))||(!!(a.test(t)||i.test(t)||c.test(t))||(!(!1===e.extglob||!p.test(t))||!(!1===e.braceExpansion||!u.test(t)))))}function f(t){return t.startsWith("!")&&"("!==t[1]}function h(t){return!f(t)}function g(t){return t.endsWith("/"+s)}function v(t){return r.braces(t,{expand:!0,nodupes:!0})}function l(t,e){return r.makeRe(t,e)}exports.isStaticPattern=x,exports.isDynamicPattern=P,exports.convertToPositivePattern=function(t){return f(t)?t.slice(1):t},exports.convertToNegativePattern=function(t){return"!"+t},exports.isNegativePattern=f,exports.isPositivePattern=h,exports.getNegativePatterns=function(t){return t.filter(f)},exports.getPositivePatterns=function(t){return t.filter(h)},exports.getBaseDirectory=function(t){return e(t,{flipBackslashes:!1})},exports.hasGlobStar=function(t){return t.includes(s)},exports.endsWithSlashGlobStar=g,exports.isAffectDepthOfReadingPattern=function(e){const r=t.basename(e);return g(e)||x(r)},exports.expandPatternsWithBraceExpansion=function(t){return t.reduce((t,e)=>t.concat(v(e)),[])},exports.expandBraceExpansion=v,exports.getPatternParts=function(t,e){let{parts:r}=n.scan(t,Object.assign(Object.assign({},e),{parts:!0}));return 0===r.length&&(r=[t]),r[0].startsWith("/")&&(r[0]=r[0].slice(1),r.unshift("")),r},exports.makeRe=l,exports.convertPatternsToRe=function(t,e){return t.map(t=>l(t,e))},exports.matchAny=function(t,e){return e.some(e=>e.test(t))};