"use strict";const e=require("stream").PassThrough,r=Array.prototype.slice;function n(r,t){if(Array.isArray(r))for(let e=0,i=r.length;e<i;e++)r[e]=n(r[e],t);else{if(!r._readableState&&r.pipe&&(r=r.pipe(e(t))),!r._readableState||!r.pause||!r.pipe)throw new Error("Only readable stream can be merged.");r.pause()}return r}module.exports=function(){const t=[],i=r.call(arguments);let o=!1,a=i[i.length-1];a&&!Array.isArray(a)&&null==a.pipe?i.pop():a={};const l=!1!==a.end,p=!0===a.pipeError;null==a.objectMode&&(a.objectMode=!0);null==a.highWaterMark&&(a.highWaterMark=65536);const u=e(a);function s(){for(let e=0,r=arguments.length;e<r;e++)t.push(n(arguments[e],a));return function e(){if(o)return;o=!0;let r=t.shift();if(!r)return process.nextTick(c),void 0;Array.isArray(r)||(r=[r]);let n=r.length+1;function i(){--n>0||(o=!1,e())}function a(e){function r(){e.removeListener("merge2UnpipeEnd",r),e.removeListener("end",r),p&&e.removeListener("error",n),i()}function n(e){u.emit("error",e)}if(e._readableState.endEmitted)return i();e.on("merge2UnpipeEnd",r),e.on("end",r),p&&e.on("error",n),e.pipe(u,{end:!1}),e.resume()}for(let e=0;e<r.length;e++)a(r[e]);i()}(),this}function c(){o=!1,u.emit("queueDrain"),l&&u.end()}u.setMaxListeners(0),u.add=s,u.on("unpipe",function(e){e.emit("merge2UnpipeEnd")}),i.length&&s.apply(null,i);return u};