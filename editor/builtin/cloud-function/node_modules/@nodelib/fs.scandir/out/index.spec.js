"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("assert"),s=require("fs"),i=require("rimraf"),e=require(".");describe("Package",()=>{before(()=>{i.sync("fixtures"),s.mkdirSync("fixtures"),s.writeFileSync("fixtures/file.txt","")}),after(()=>{i.sync("fixtures")}),describe(".scandir",()=>{it("should work without options or settings",s=>{e.scandir("fixtures",(i,e)=>{t.strictEqual(i,null),t.ok(e[0].name),t.ok(e[0].path),t.ok(e[0].dirent),s()})}),it("should work with options",s=>{e.scandir("fixtures",{stats:!0},(i,e)=>{t.strictEqual(i,null),t.ok(e[0].name),t.ok(e[0].path),t.ok(e[0].dirent),t.ok(e[0].stats),s()})}),it("should work with settings",s=>{const i=new e.Settings({stats:!0});e.scandir("fixtures",i,(i,e)=>{t.strictEqual(i,null),t.ok(e[0].name),t.ok(e[0].path),t.ok(e[0].dirent),t.ok(e[0].stats),s()})})}),describe(".scandirSync",()=>{it("should work without options or settings",()=>{const s=e.scandirSync("fixtures");t.ok(s[0].name),t.ok(s[0].path),t.ok(s[0].dirent)}),it("should work with options",()=>{const s=e.scandirSync("fixtures",{stats:!0});t.ok(s[0].name),t.ok(s[0].path),t.ok(s[0].dirent),t.ok(s[0].stats)}),it("should work with settings",()=>{const s=new e.Settings({stats:!0}),i=e.scandirSync("fixtures",s);t.ok(i[0].name),t.ok(i[0].path),t.ok(i[0].dirent),t.ok(i[0].stats)})})});