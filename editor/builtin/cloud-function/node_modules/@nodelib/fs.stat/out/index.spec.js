"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("assert"),i=require("fs"),s=require("rimraf"),r=require(".");describe("Package",()=>{before(()=>{s.sync("fixtures"),i.mkdirSync("fixtures"),i.mkdirSync("fixtures/a"),i.symlinkSync("a","fixtures/b","junction")}),after(()=>{s.sync("fixtures")}),describe(".stat",()=>{it("should work without options or settings",i=>{r.stat("fixtures/b",(s,r)=>{t.strictEqual(s,null),t.ok(r),i()})}),it("should work with options",i=>{r.stat("fixtures/b",{markSymbolicLink:!0},(s,r)=>{t.strictEqual(s,null),t.strictEqual(r.isSymbolicLink(),!0),i()})}),it("should work with settings",i=>{const s=new r.Settings({markSymbolicLink:!0});r.stat("fixtures/b",s,(s,r)=>{t.strictEqual(s,null),t.strictEqual(r.isSymbolicLink(),!0),i()})})}),describe(".statSync",()=>{it("should work without options or settings",()=>{const i=r.statSync("fixtures/b");t.ok(i)}),it("should work with options",()=>{const i=r.statSync("fixtures/b",{markSymbolicLink:!0});t.strictEqual(i.isSymbolicLink(),!0)}),it("should work with settings",()=>{const i=new r.Settings({markSymbolicLink:!0}),s=r.statSync("fixtures/b",i);t.strictEqual(s.isSymbolicLink(),!0)})})});