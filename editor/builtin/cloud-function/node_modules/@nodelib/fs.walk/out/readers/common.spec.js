"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("assert"),t=require("path"),r=require("../settings"),s=require("../tests"),i=require("./common");describe("Readers â†’ Common",()=>{describe(".isFatalError",()=>{it("should return true when filter is not defined",()=>{const t=new r.default,n=i.isFatalError(t,s.EPERM_ERRNO);e.ok(n)}),it("should return true when the error cannot be suppressed",()=>{const t=new r.default({errorFilter:e=>"ENOENT"===e.code}),n=i.isFatalError(t,s.EPERM_ERRNO);e.ok(n)}),it("should return false when the error can be suppressed",()=>{const t=new r.default({errorFilter:e=>"EPERM"===e.code}),n=i.isFatalError(t,s.EPERM_ERRNO);e.ok(!n)})}),describe(".isAppliedFilter",()=>{it("should return true when the filter is not defined",()=>{const t=new r.default,n=s.buildFakeFileEntry(),a=i.isAppliedFilter(t.entryFilter,n);e.ok(a)}),it("should return true when the entry will be applied",()=>{const t=new r.default({entryFilter:e=>"fake.txt"===e.name}),n=s.buildFakeFileEntry(),a=i.isAppliedFilter(t.entryFilter,n);e.ok(a)}),it("should return false when the entry will be skipped",()=>{const t=new r.default({entryFilter:e=>"fake.txt"!==e.name}),n=s.buildFakeFileEntry(),a=i.isAppliedFilter(t.entryFilter,n);e.ok(!a)})}),describe(".replacePathSegmentSeparator",()=>{it("should replace path segment separator",()=>{const r=t.join("directory","file.txt"),s=i.replacePathSegmentSeparator(r,"_");e.strictEqual(s,"directory_file.txt")})}),describe(".joinPathSegments",()=>{it("should return concatenated string",()=>{const t=i.joinPathSegments("a","b","&");e.strictEqual(t,"a&b")}),it("should return second part of path when the first path is an empty string",()=>{const t=i.joinPathSegments("","b","&");e.strictEqual(t,"b")}),it("should return correct string when the first segment ens with the separator symbol",()=>{e.strictEqual(i.joinPathSegments("/","a","/"),"/a"),e.strictEqual(i.joinPathSegments("//","a","/"),"//a"),e.strictEqual(i.joinPathSegments("/a/","b","/"),"/a/b"),e.strictEqual(i.joinPathSegments("C:/","Users","/"),"C:/Users"),e.strictEqual(i.joinPathSegments("C:\\","Users","\\"),"C:\\Users"),e.strictEqual(i.joinPathSegments("//?/C:/","Users","/"),"//?/C:/Users"),e.strictEqual(i.joinPathSegments("\\\\?\\C:\\","Users","\\"),"\\\\?\\C:\\Users")})})});